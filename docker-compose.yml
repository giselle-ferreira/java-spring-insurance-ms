services:
  postgres:
    image: bitnami/postgresql:latest
    container_name: insurance
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: insurance_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    volumes:
      - insurance_db_data:/postgresql/data
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    networks:
      - app-network

  mock-catalog-service:
    image: mockserver/mockserver
    container_name: mockserver
    ports:
      - '1080:1080'
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/mockserver.json
    volumes:
      - type: bind
        source: .
        target: /config
    networks:
      - app-network

  insurance-quote-ms:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: insurance-quote-ms
    ports:
      - '8081:8080'
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/insurance_db
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin123
      CATALOG_SERVICE_URL: http://mock-catalog-service:1080
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      mock-catalog-service:
        condition: service_started
    command: [ "sh", "-c", "sleep 30 && java -jar app.jar" ]
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  insurance_db_data:
